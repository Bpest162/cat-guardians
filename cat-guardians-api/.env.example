SECRET_KEY=django-insecure-=*k4jjilejcj^k0a-(q=jx@uhxtk4-)+$)tqwo4aieg_8id+j0

### set DEBUG to 'false' for production!!!!!!!!!!
DEBUG=True

### GOOGLE SMTP
EMAIL_HOST_USER=set_me
EMAIL_HOST_PASSWORD=set_me

### GOOGLE
BASE_URL=http://localhost:80
GOOGLE_ID_TOKEN_INFO_URL=https://www.googleapis.com/oauth2/v3/tokeninfo
GOOGLE_ACCESS_TOKEN_OBTAIN_URL=https://oauth2.googleapis.com/token
GOOGLE_USER_INFO_URL=https://www.googleapis.com/oauth2/v3/userinfo
GOOGLE_AUTH_URL=https://accounts.google.com/o/oauth2/v2/auth
GOOGLE_SCOPE_EMAIL=https://www.googleapis.com/auth/userinfo.email
GOOGLE_SCOPE_PROFILE=https://www.googleapis.com/auth/userinfo.profile
GOOGLE_OAUTH2_CLIENT_ID=set_me
GOOGLE_OAUTH2_CLIENT_SECRET=set_me
GOOGLE_OAUTH2_PROJECT_ID=set_me

PROJECT_DIR=/src

LIQPAY_PUBLIC_KEY=sandbox_i16640195680
LIQPAY_PRIVATE_KEY=sandbox_dAZ7gnoLGgRbUy2N6kETaWshW5yW05gboS0h6kuD

### POSTGRESQL
POSTGRES_DB=database
POSTGRES_USER=postgres
POSTGRES_PASSWORD=password
PGADMIN_EMAIL=example@gmail.com
PGADMIN_PASSWORD=password

### NGINX
API_HOST=api:8000
DOMAIN=catguardians-stage.com
ENV_DIR_DEV=dev
ENV_DIR_PROD=prod

### CERTBOT
### Put domain's owner email for receiving notifications
CERTBOT_EMAIL=dev.python.testing@gmail.com

###AWS ECR
AWS_ECR_IMAGE_URI_API=637423659023.dkr.ecr.eu-central-1.amazonaws.com/cat-guardians-api:latest
AWS_ECR_IMAGE_URI_UI=637423659023.dkr.ecr.eu-central-1.amazonaws.com/cat-guardians-ui:latest

###AWS file storage
FOUND_CAT_PHOTO=found_cat_photos
CAT_PROFILE_PHOTO=photos
AWS_S3_ACCESS_KEY_ID=set_me
AWS_S3_SECRET_ACCESS_KEY=set_me
AWS_STORAGE_BUCKET_NAME="catguardians-stage-images"
AWS_S3_REGION_NAME="eu-central-1"
